/* boxesComponent's private CSS styles */

.boxes {
  list-style-type: none;
  margin-top: -10px;
}

.wrapper {
  display: grid;
  width: 100%;
}

ul{
  list-style-type: none;
  width: 100%;
  margin: 0 0 0 0;
  padding: 0 0 0 0;
}

.button {
  font-size: 100%;
  margin-top: 10px;
  color: black;
  cursor: pointer;
  position: relative;
  outline: none;
  background-color: darkseagreen;
  border: none;
  border-radius: 15px;
  box-shadow: 0 5px #666;
  width: 95%;
  height:15vw;
  margin-left: 2.5%;
  white-space: nowrap;
  overflow: hidden;
}

.actionButton {

}

.button:hover {
  filter: brightness(80%);
}

.button:active {
  box-shadow: 0 2px #666;
  transform: translateY(3px);
}

.boxes .folder {
}

.button .icon {
  position: relative;
  margin-left: 15%;
  margin-right: 15%;
  outline: none;
  width: 70%;
  height: 70%;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.button .label {
  position: relative;
  outline: none;
  border: none;
  width: 100%;
  margin-top: 5%;
  text-alignment: center;
}

.backlabel {
  margin-top: calc(-100% - 16px);
  padding-top: calc(50% + 2px);
}

.back {
  background-color: darkred;
}


.add {
  background-color: darkseagreen;
  opacity: 0.5;
}

.add:hover {
  opacity: 1;
}

.slidecontainer {
  margin-left: -2px;
  width: 100%;
  outline: none;
  float: left;
}

.slider {
  margin-top: 5px;
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 20px;
  background: #999;
  outline: none;
  -webkit-transition: .2s;
  border-radius: 15px;
  outline: none;
  border: none;
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 10%;
  height: 20px;
  background: black;
  cursor: pointer;
  border-radius: 15px;
  outline: none;
  border: none;
}

.slider::-moz-range-thumb {
  width: 10%;
  height: 20px;
  background: black;
  cursor: pointer;
  border-radius: 15px;
  outline: none;
  border: none;
}

/* in-flight clone */
.gu-mirror {
  position: fixed !important;
  opacity: 0.8;
  filter: alpha(opacity=80);
  pointer-events: none;
}
/* added to the source element while its mirror is dragged */
.gu-transit {
  opacity: 0.2;
  filter: alpha(opacity=20);
}
